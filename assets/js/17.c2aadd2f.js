(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{514:function(e,t,r){"use strict";r.r(t);var v=r(6),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"概括的说"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概括的说"}},[e._v("#")]),e._v(" 概括的说")]),e._v(" "),r("p",[e._v("vue.js是一个非常优秀的前端开发框架。vue几个核心的地方：vue实例化，虚拟DOM，模版编译过程，数据绑定。\nvue的数据绑定的实现原理离不开vue中响应式的数据处理方式。")]),e._v(" "),r("p",[e._v("vue的响应式基本原理：")]),e._v(" "),r("ul",[r("li",[e._v("vue会遍历此data中对象所有的属性")]),e._v(" "),r("li",[e._v("并使用Object.defineProperty把这些属性全部转为getter/setter")]),e._v(" "),r("li",[e._v("而每个组件实例都有watcher对象")]),e._v(" "),r("li",[e._v("它会在组件渲染的过程中把属性记录为依赖")]),e._v(" "),r("li",[e._v("之后当依赖项的setter被调用时，会通知watcher重新计算，从而致它关联的组件得以更新")])]),e._v(" "),r("h2",{attrs:{id:"亮点的说"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#亮点的说"}},[e._v("#")]),e._v(" 亮点的说")]),e._v(" "),r("ul",[r("li",[e._v("vue的响应式原理设计三个重要对象:Observer，Watcher，Dep")]),e._v(" "),r("li",[e._v("Observer对象：")])]),e._v(" "),r("blockquote",[r("p",[e._v("vue中的数据对象在初始化过程中转换为Observer对象")])]),e._v(" "),r("ul",[r("li",[e._v("Watcher对象：")])]),e._v(" "),r("blockquote",[r("p",[e._v("将模版和Observer对象结合在一起生成Watcher实例，Watcher是订阅者中的订阅者")])]),e._v(" "),r("ul",[r("li",[e._v("Dep对象：")])]),e._v(" "),r("blockquote",[r("p",[e._v("Watcher对象和Observer对象之间纽带，每一个Observer都有一个Dep实例，用来存储订阅者Watcher")])]),e._v(" "),r("p",[e._v("当属性变化会执行主题对象Observer的dep.notify方法，这个方法会遍历订阅者Watcher列表向其发送消息，Watcher会执行run方法去更新试图\n模版编译过程中的指令和数据绑定都会生成Watcher实例，实例中的watch属性也会生成Watcher实例。")]),e._v(" "),r("ul",[r("li",[e._v("1.在生命周期的initState方法中将data，prop，method，computed，watch中的数据劫持，通过observe方法在Object.defineProperty方法将相关对象转为Observer对象。")]),e._v(" "),r("li",[e._v("2.然后在initRender方法中解析模版，通过Watcher对象，Dep对象与观察者模式将模版中的指令与对象的数据建立依赖关系，使用全局对象Dep.target实现依赖收集。")]),e._v(" "),r("li",[e._v("3.当数据变化时，setter被调用，触发Object.defineProperty方法中的dep.notify方法，遍历该数据依赖列表，执行器update方法通知Watcher进行视图更新。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);