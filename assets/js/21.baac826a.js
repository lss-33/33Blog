(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{529:function(v,t,_){"use strict";_.r(t);var e=_(6),l=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"nuxt-js是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nuxt-js是什么"}},[v._v("#")]),v._v(" Nuxt.js是什么？")]),v._v(" "),_("p",[v._v("Nuxt.js是一个基于Vue.js的通用应用框架。\n通过对客户端/服务端基础框架的抽象组织，Nuxt.js主要关注的是应用的UI渲染。\nNuxt.js预设了利用Vue.js开发服务端渲染的应用所需要的各种配置。")]),v._v(" "),_("p",[v._v("Nuxt.js集成了以下组件/框架，用于开发完整而强大的Web应用：")]),v._v(" "),_("ul",[_("li",[v._v("Vue2")]),v._v(" "),_("li",[v._v("Vue-Router")]),v._v(" "),_("li",[v._v("Vuex（当配置了Vuex状态树配置项时才会引入）")]),v._v(" "),_("li",[v._v("Vue服务器端渲染（排除使用mode:'spa'）")]),v._v(" "),_("li",[v._v("Vue-Meta\n另外，Nuxt.js使用Webpack和vue-loader、babel-loader来处理代码的自动化构建工作（如打包、代码分层、压缩等等）")])]),v._v(" "),_("h2",{attrs:{id:"特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[v._v("#")]),v._v(" 特性")]),v._v(" "),_("ul",[_("li",[v._v("基于Vue.js")]),v._v(" "),_("li",[v._v("自动代码分层")]),v._v(" "),_("li",[v._v("服务端渲染")]),v._v(" "),_("li",[v._v("强大的路由功能，支持异步数据")]),v._v(" "),_("li",[v._v("静态文件服务")]),v._v(" "),_("li",[v._v("ES2015+ 语法支持")]),v._v(" "),_("li",[v._v("打包和压缩 JS 和 CSS")]),v._v(" "),_("li",[v._v("HTML 头部标签管理")]),v._v(" "),_("li",[v._v("本地开发支持热加载")]),v._v(" "),_("li",[v._v("集成 ESLint")]),v._v(" "),_("li",[v._v("支持各种样式预处理器： SASS、LESS、 Stylus 等等")]),v._v(" "),_("li",[v._v("支持 HTTP/2 推送")])])])}),[],!1,null,null,null);t.default=l.exports}}]);